types = {
	type[unit] = {
		skip_root_key = sub_units
		path = "game/common/units"
		path_strict = yes
		subtype[line_unit] = {
			## cardinality = 0..1
			group = scalar
			## cardinality = 0..1
			group = { scalar }
		}
		subtype[support_unit] = {
			group = support
		}
		subtype[air_unit] = {
			type = enum[air_units]
			type = {
				## cardinality = 1..10
				enum[air_units]
			}
		}
		subtype[ship_unit] = {
			map_icon_category = enum[ship_map_icons]
		}
		subtype[other] = {
			map_icon_category = other
		}
	}
	type[division_name] = {
		path = "game/common/units/names_divisions"
	}
	type[ship_name] = {
		path = "game/common/units/names_ships"
	}
}

unit = {
	## cardinality = 0..1
	abbreviation = scalar
	### 3D map asset.
	sprite = scalar
	#enum[unit_sprites]
	subtype[line_unit] = {
		## cardinality = 0..1
		group = scalar
		## cardinality = 0..1
		group = { scalar }

		need = {
			## cardinality = ~1..inf
			<equipment> = int
			## cardinality = 0..inf
			value[nsb_armor_variants] = int
		}

		ai_priority = int

		### map icon
		map_icon_category = enum[land_map_icons]

		## cardinality = 0..1
		cavalry = bool
		## cardinality = 0..1
		special_forces = bool
		## cardinality = 0..1
		marines = bool
		## cardinality = 0..1
		mountaineers = bool
		## cardinality = 0..1
		can_be_parachuted = bool
		## cardinality = 0..1
		can_exfiltrate_from_coast = bool
		## cardinality = 0..1
		affects_speed = bool

		## cardinality = 0..1
		### use this equipment for speed
		transport = <equipment>

		### unit type
		type = {
			## cardinality = ~1..inf
			enum[land_units]
		}
	}
	subtype[support_unit] = {
		group = support
		need = {
			## cardinality = ~1..inf
			<equipment> = int
		}
		ai_priority = int

		### map icon
		map_icon_category = enum[land_map_icons]

		## cardinality = 0..1
		### Cavalry.
		cavalry = bool

		## cardinality = 0..1
		### Counts against special forces limit.
		special_forces = bool

		## cardinality = 0..1
		### Marines ooh-rah.
		marines = bool

		## cardinality = 0..1
		### Mountaineers.
		mountaineers = bool

		## cardinality = 0..1
		### Paratroopers.
		can_be_parachuted = bool

		## cardinality = 0..1
		can_exfiltrate_from_coast = bool

		## cardinality = 0..1
		### Use this equipment for speed.
		transport = <equipment>

		### Unit type.
		type = {
			## cardinality = ~1..inf
			enum[land_units]
		}

		## cardinality = 0..1
		affects_speed = no

		## cardinality = 0..1
		### Blocks adding same unit types to a template.
		same_support_type = <unit.support_unit>

		## cardinality = 0..1
		### Blocks adding same unit types to a template.
		same_support_type = enum[land_units]

		## cardinality = 0..1
		battalion_mult = {
			## cardinality = 1..inf
			category = enum[unit_category]
			## cardinality = 1..inf
			alias_name[unit_stat] = alias_match_left[unit_stat]
			## cardinality = 0..1
			add = bool
			## cardinality = 0..1
			display_as_percentage = bool
		}
	}

	subtype[ship_unit] = {
		## cardinality = 0..1
		need = {
			## cardinality = ~1..inf
			<equipment> = int
		}
		## cardinality = 0..1
		need_equipment = {
			## cardinality = ~1..inf
			<equipment> = int
		}
		## cardinality = 0..1
		need_equipment_modules = {
			any = {
				## cardinality = 1..inf
				<module> = int
			}
		}
		### Map icon.
		map_icon_category = enum[ship_map_icons]
		type = {
			## cardinality = ~1..inf
			enum[ship_units]
		}
		alias_name[naval_stat] = alias_match_left[naval_stat]
		critical_parts = {
			## cardinality = ~1..inf
			<critical_part>
		}
		critical_part_damage_chance_mult = float
		hit_profile_mult = float
	}

	subtype[air_unit] = {
		need = {
			## cardinality = ~1..inf
			<equipment> = int
			## cardinality = 0..1
			value[bba_air_variants] = int
		}
		type = enum[air_units]
		type = {
			## cardinality = ~1..inf
			enum[air_units]
		}
		alias_name[air_stat] = alias_match_left[air_stat]

		### Determines the default size of the air wing for this unit
		## cardinality = 0..1
		land_air_wing_size = int
		### Determines the default size of the carrier air wing for this unit
		## cardinality = 0..1
		carrier_air_wing_size = int
		## cardinality = 0..1
		mega_carrier_air_wing_size = int
	}
	subtype[other] = {

		need = {
			## cardinality = ~1..inf
			<equipment> = int
			## cardinality = 0..inf
			value[nsb_armor_variants] = int
		}

		### map icon
		map_icon_category = other

		### unit type
		type = {
			## cardinality = ~1..inf
			enum[land_units]
		}
	}

	subtype[catch] = {
		test = int
	}
	### Weighting for mixed divisions.
	priority = int

	### Whether needs tech to create.
	active = bool

	alias_name[unit_stat] = alias_match_left[unit_stat]

	## cardinality = 0..1
	own_equipment_fuel_consumption_mult = float

	## cardinality = 0..1
	essential = {
		## cardinality = ~1..inf
		<equipment>
	}
	## cardinality = 0..1
	categories = {
		## cardinality = ~1..inf
		enum[unit_category]
	}
}

ship_name = {
	name = localisation
	## cardinality = 0..1
	for_countries = {
		## cardinality = ~1..inf
		enum[country_tags]
	}
	## cardinality = 0..1
	can_use = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	type = ship
	## cardinality = 0..1
	ship_types = {
		## cardinality = ~1..inf
		<equipment.naval_equip>
		## cardinality = ~1..inf
		<unit.ship_unit>
		## cardinality = ~1..inf
		enum[ship_units]
	}
	## cardinality = 0..1
	link_numbering_with = {
		## cardinality = ~1..inf
		<ship_name>
	}
	## cardinality = 0..1
	prefix = scalar
	## cardinality = 0..1
	fallback_name = scalar
	## cardinality = 0..1
	unique = {
		## cardinality = ~1..inf
		scalar
	}
	## cardinality = 0..1
	unordered = {
		## cardinality = ~1..inf
		int = {
			scalar
		}
	}
	## cardinality = 0..1
	ordered = {
		## cardinality = ~1..inf
		int = {
			## cardinality = 1..2
			scalar
		}
	}
}

division_name = {
	name = localisation_inline
	for_countries = {
		## cardinality = ~1..inf
		enum[country_tags]
	}
	## cardinality = 0..1
	## replace_scope = { root = country this = country }
	can_use = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	## cardinality = ~0..1
	division_types = {
		## cardinality = ~1..inf
		<unit>
	}
	## cardinality = 0..1
	link_numbering_with = {
		## cardinality = ~1..inf
		<division_name>
	}
	## cardinality = 0..1
	fallback_name = scalar
	## cardinality = 0..1
	unordered = {
		## cardinality = ~1..inf
		int = {
			scalar
		}
	}
	## cardinality = 0..1
	ordered = {
		## cardinality = ~1..inf
		int = {
			## cardinality = 1..2
			scalar
		}
	}
}

enums = {
	enum[land_map_icons] = {
		infantry
		armored
		other
	}
	enum[ship_map_icons] = {
		ship
		transport
		uboat
	}
	enum[unit_groups] = {
		infantry
		support
		mobile
		armor
	}
	enum[unit_types] = { # use enum[equipment_category] so updated automatically? and update here for  for seperating in other land/air/naval groups?
		convoy
		train
		floating_harbor
		railway_gun
		armor
		motorized
		mechanized
		infantry
		capital_ship
		submarine
		screen_ship
		fighter
		heavy_fighter
		interceptor
		tactical_bomber
		strategic_bomber
		cas
		naval_bomber
		missile
		emplacement_gun_ammo
		ballistic_missile
		nuclear_missile
		sam_missile
		suicide
		scout_plane
		maritime_patrol_plane
		air_transport
		carrier
		missile_launcher
		support
		amphibious
		anti_air
		artillery
		anti_tank
		rocket
		flame
		land_cruiser
	}
	enum[land_units] = {
		infantry
		support
		artillery
		rocket
		anti_tank
		anti_air
		motorized
		mechanized
		armor
		amphibious
		flame
		railway_gun
		land_cruiser
	}
	enum[air_units] = {
		air_transport
		cas
		fighter
		interceptor
		missile
		naval_bomber
		scout_plane
		strategic_bomber
		suicide
		tactical_bomber
		maritime_patrol_plane
		heavy_fighter
		ballistic_missile
		emplacement_gun_ammo
		nuclear_missile
		sam_missile
	}
	enum[ship_units] = {
		battle_cruiser
		battleship
		capital_ship
		carrier
		convoy
		destroyer
		heavy_cruiser
		light_cruiser
		screen_ship
		submarine

		# MD Specific
		corvette
		frigate
		attack_submarine
		missile_submarine
		helicopter_operator
		stealth_destroyer
		anti_air
		artillery
	}
	enum[allowed_air_unit_missions] = {
		air_superiority
		cas
		interception
		strategic_bomber
		naval_bomber
		drop_nuke
		paradrop
		naval_kamikaze
		port_strike
		attack_logistics
		air_supply
		training
		naval_mines_planting
		naval_mines_sweeping
		recon
		naval_patrol
		barrage_mission
		sam_mission
	}
	complex_enum[unit_category] = {
		path = "game/common/unit_tags"
		start_from_root = yes
		name = {
			sub_unit_categories = {
				enum_name
			}
		}
	}
	complex_enum[sub_unit_modifiers] = {
		path = "game/common/units/unit_modifiers"
		start_from_root = yes
		name = {
			sub_unit_modifiers = {
				enum_name
			}
		}
	}
}
